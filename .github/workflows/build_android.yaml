name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'Android/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'Android/**'

jobs:
  build_apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Android/src
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew
      
      - name: Build Debug APK
        run: ./gradlew assembleDebug
      
      - name: Generate release info
        id: release_info
        run: |
          # Get current date and time
          CURRENT_DATE=$(date +'%Y-%m-%d %H:%M:%S UTC')
          
          # Get commit info
          COMMIT_SHA=$(git rev-parse --short HEAD)
          COMMIT_MSG=$(git log -1 --pretty=format:'%s')
          
          # Generate tag name with timestamp
          TAG_NAME="debug-$(date +'%Y%m%d-%H%M%S')"
          
          RELEASE_NAME="Debug Build - $CURRENT_DATE"
          
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "build_date=$CURRENT_DATE" >> $GITHUB_OUTPUT
      
      - name: Find Debug APK
        id: find_apk
        run: |
          APK_PATH=$(find app/build/outputs/apk/debug -name "*.apk" | head -1)
          if [ -z "$APK_PATH" ]; then
            echo "Error: Debug APK not found!"
            exit 1
          fi
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          
          # Get APK size for release notes
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "apk_size=$APK_SIZE" >> $GITHUB_OUTPUT
          
          # Generate APK filename with version info
          APK_FILENAME="ai-edge-gallery-debug-${{ steps.release_info.outputs.commit_sha }}.apk"
          echo "apk_filename=$APK_FILENAME" >> $GITHUB_OUTPUT
      
      - name: Create Release and Upload APK
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_info.outputs.tag_name }}
          name: ${{ steps.release_info.outputs.release_name }}
          draft: false
          prerelease: true
          files: ${{ steps.find_apk.outputs.apk_path }}
          body: |
            ## 🚀 AI Edge Gallery Debug Build
            
            **Build Information:**
            - 📅 Built on: ${{ steps.release_info.outputs.build_date }}
            - 📝 Commit: `${{ steps.release_info.outputs.commit_sha }}`
            - 💬 Message: ${{ steps.release_info.outputs.commit_msg }}
            - 📦 APK Size: ${{ steps.find_apk.outputs.apk_size }}
            
            **Installation:**
            1. Download the APK file below
            2. Enable "Install from Unknown Sources" in Android settings
            3. Install the APK on your Android device (API 31+)
            
            **Note:** This is a debug build intended for testing purposes.
            
            ---
            *Auto-generated by GitHub Actions*
